name: SSH Deploy

on:
  push:
    branches: [ deploy ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # Install PHP
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2.1
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring
        env:
          update: true
      - name: Check PHP Version
        run: php -v
      # Install backend dependencies (Composer)
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install
      # Prepare .env file for production
      - name: Make production envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_APP_ENV: prod
          envkey_APP_DEBUG: false
          envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
          envkey_DATABASE_URL:  ${{ secrets.DATABASE_URL }}
          envkey_CORS_ALLOW_ORIGIN: ${{ secrets.CORS_ALLOW_ORIGIN }}
          envkey_HCAPTCHA_SECRET: ${{ secrets.HCAPTCHA_SECRET }}
          file_name: .env.local
      # Copying files and artifacts via SSH
      - name: Copying files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          # rm: true
          source: "./"
          target: ${{ secrets.REMOTE_TARGET }}
      # Check files on production
      - name: Check files on production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            pwd
            ls -al 
      # Override docker .env passwords with secrets
      - name: Make docker production envfile
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            cd docker
            sed -i 's/DB_PASSWORD=site_perso/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env
            sed -i 's/DB_ROOT_PASSWORD=password/DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}/' .env
      # Run commands on production
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          script: |
            cd ${{ secrets.REMOTE_TARGET }}
            cd docker
            make up-prod
            make exec "php bin/console doctrine:migrations:migrate --env=prod" 